{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../websocket.service\";\nexport class WebsocketComponent {\n  constructor(webSocketService) {\n    this.webSocketService = webSocketService;\n    this.notifications = 0;\n    // Open connection with server socket\n    let stompClient = this.webSocketService.connect();\n    stompClient.connect({}, frame => {\n      // Subscribe to notification topic\n      stompClient.subscribe('/topic/notification', notifications => {\n        // Update notifications attribute with the recent messsage sent from the server\n        this.notifications = JSON.parse(notifications.body).count;\n      });\n    });\n  }\n  static #_ = this.ɵfac = function WebsocketComponent_Factory(t) {\n    return new (t || WebsocketComponent)(i0.ɵɵdirectiveInject(i1.WebSocketService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WebsocketComponent,\n    selectors: [[\"app-websocket\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[2, \"text-align\", \"center\", \"margin-top\", \"150px\"], [2, \"font-size\", \"4em\"], [2, \"color\", \"red\"]],\n    template: function WebsocketComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \" Notifications : \");\n        i0.ɵɵelementStart(3, \"span\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"+\", ctx.notifications, \"\");\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["WebsocketComponent","constructor","webSocketService","notifications","stompClient","connect","frame","subscribe","JSON","parse","body","count","_","i0","ɵɵdirectiveInject","i1","WebSocketService","_2","selectors","decls","vars","consts","template","WebsocketComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["C:\\Users\\GersonJr\\Desktop\\projetos\\angular\\projeto-websocket\\src\\app\\websocket\\websocket.component.ts","C:\\Users\\GersonJr\\Desktop\\projetos\\angular\\projeto-websocket\\src\\app\\websocket\\websocket.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WebSocketService } from '../websocket.service';\n\n@Component({\n  selector: 'app-websocket',\n  templateUrl: './websocket.component.html',\n  styleUrls: ['./websocket.component.css']\n})\nexport class WebsocketComponent {\n  public notifications: any = 0;\n\n  constructor(private webSocketService: WebSocketService) {\n\n  // Open connection with server socket\n      let stompClient = this.webSocketService.connect();\n      stompClient.connect({}, (frame: any) => {\n\n    // Subscribe to notification topic\n          stompClient.subscribe('/topic/notification', (notifications: any) => {\n\n      // Update notifications attribute with the recent messsage sent from the server\n              this.notifications = JSON.parse(notifications.body).count;\n          })\n      });\n  }\n\n}\n","<div style=\"text-align:center; margin-top: 150px;\">\n\n  <h1 style=\"font-size: 4em;\">\n\n      Notifications : <span style=\"color: red;\">+{{ notifications }}</span>\n\n  </h1>\n\n</div>"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IAF7B,KAAAC,aAAa,GAAQ,CAAC;IAI7B;IACI,IAAIC,WAAW,GAAG,IAAI,CAACF,gBAAgB,CAACG,OAAO,EAAE;IACjDD,WAAW,CAACC,OAAO,CAAC,EAAE,EAAGC,KAAU,IAAI;MAEzC;MACMF,WAAW,CAACG,SAAS,CAAC,qBAAqB,EAAGJ,aAAkB,IAAI;QAExE;QACQ,IAAI,CAACA,aAAa,GAAGK,IAAI,CAACC,KAAK,CAACN,aAAa,CAACO,IAAI,CAAC,CAACC,KAAK;MAC7D,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAhBUZ,kBAAkB,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBjB,kBAAkB;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR/BX,EAAA,CAAAa,cAAA,aAAmD;QAI7Cb,EAAA,CAAAc,MAAA,wBAAgB;QAAAd,EAAA,CAAAa,cAAA,cAA0B;QAAAb,EAAA,CAAAc,MAAA,GAAoB;QAAAd,EAAA,CAAAe,YAAA,EAAO;;;QAA3Bf,EAAA,CAAAgB,SAAA,GAAoB;QAApBhB,EAAA,CAAAiB,kBAAA,MAAAL,GAAA,CAAAtB,aAAA,KAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}