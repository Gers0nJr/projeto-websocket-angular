{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"@stomp/stompjs\"), require(\"rxjs\"), require(\"rxjs/operators\"));else if (typeof define === 'function' && define.amd) define(\"RxStomp\", [\"@stomp/stompjs\", \"rxjs\", \"rxjs/operators\"], factory);else if (typeof exports === 'object') exports[\"RxStomp\"] = factory(require(\"@stomp/stompjs\"), require(\"rxjs\"), require(\"rxjs/operators\"));else root[\"RxStomp\"] = factory(root[\"StompJs\"], root[\"rxjs\"], root[\"rxjs\"][\"operators\"]);\n})(typeof self !== 'undefined' ? self : this, function (__WEBPACK_EXTERNAL_MODULE__stomp_stompjs__, __WEBPACK_EXTERNAL_MODULE_rxjs__, __WEBPACK_EXTERNAL_MODULE_rxjs_operators__) {\n  return (/******/function (modules) {\n      // webpackBootstrap\n      /******/ // The module cache\n      /******/\n      var installedModules = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId]) {\n          /******/return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n          /******/i: moduleId,\n          /******/l: false,\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.l = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /******/\n      /******/ // expose the modules object (__webpack_modules__)\n      /******/\n      __webpack_require__.m = modules;\n      /******/\n      /******/ // expose the module cache\n      /******/\n      __webpack_require__.c = installedModules;\n      /******/\n      /******/ // define getter function for harmony exports\n      /******/\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/if (!__webpack_require__.o(exports, name)) {\n          /******/Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n      };\n      /******/\n      /******/ // define __esModule on exports\n      /******/\n      __webpack_require__.r = function (exports) {\n        /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n      /******/ // create a fake namespace object\n      /******/ // mode & 1: value is a module id, require it\n      /******/ // mode & 2: merge all properties of value into the ns\n      /******/ // mode & 4: return value when already ns object\n      /******/ // mode & 8|1: behave like require\n      /******/\n      __webpack_require__.t = function (value, mode) {\n        /******/if (mode & 1) value = __webpack_require__(value);\n        /******/\n        if (mode & 8) return value;\n        /******/\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n        var ns = Object.create(null);\n        /******/\n        __webpack_require__.r(ns);\n        /******/\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n        return ns;\n        /******/\n      };\n      /******/\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\n      /******/\n      __webpack_require__.n = function (module) {\n        /******/var getter = module && module.__esModule ? /******/function getDefault() {\n          return module['default'];\n        } : /******/function getModuleExports() {\n          return module;\n        };\n        /******/\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n        return getter;\n        /******/\n      };\n      /******/\n      /******/ // Object.prototype.hasOwnProperty.call\n      /******/\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n      /******/ // __webpack_public_path__\n      /******/\n      __webpack_require__.p = \"\";\n      /******/\n      /******/\n      /******/ // Load entry module and return exports\n      /******/\n      return __webpack_require__(__webpack_require__.s = 0);\n      /******/\n    }\n    /************************************************************************/\n    /******/({\n      /***/\"./node_modules/angular2-uuid/index.js\":\n      /*!*********************************************!*\\\n        !*** ./node_modules/angular2-uuid/index.js ***!\n        \\*********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var UUID = function () {\n          function UUID() {\n            // no-op\n          }\n          UUID.UUID = function () {\n            if (typeof window !== \"undefined\" && typeof window.crypto !== \"undefined\" && typeof window.crypto.getRandomValues !== \"undefined\") {\n              // If we have a cryptographically secure PRNG, use that\n              // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n              var buf = new Uint16Array(8);\n              window.crypto.getRandomValues(buf);\n              return this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]);\n            } else {\n              // Otherwise, just use Math.random\n              // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n              // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\n              return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\n            }\n          };\n          UUID.pad4 = function (num) {\n            var ret = num.toString(16);\n            while (ret.length < 4) {\n              ret = \"0\" + ret;\n            }\n            return ret;\n          };\n          UUID.random4 = function () {\n            return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n          };\n          return UUID;\n        }();\n        exports.UUID = UUID;\n        //# sourceMappingURL=index.js.map\n\n        /***/\n      },\n\n      /***/\"./src/index.ts\":\n      /*!**********************!*\\\n        !*** ./src/index.ts ***!\n        \\**********************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        function __export(m) {\n          for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        __export(__webpack_require__( /*! ./rx-stomp-config */\"./src/rx-stomp-config.ts\"));\n        __export(__webpack_require__( /*! ./rx-stomp */\"./src/rx-stomp.ts\"));\n        __export(__webpack_require__( /*! ./rx-stomp-state */\"./src/rx-stomp-state.ts\"));\n        __export(__webpack_require__( /*! ./rx-stomp-rpc-config */\"./src/rx-stomp-rpc-config.ts\"));\n        __export(__webpack_require__( /*! ./rx-stomp-rpc */\"./src/rx-stomp-rpc.ts\"));\n\n        /***/\n      },\n\n      /***/\"./src/rx-stomp-config.ts\":\n      /*!********************************!*\\\n        !*** ./src/rx-stomp-config.ts ***!\n        \\********************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Represents a configuration object for RxSTOMP.\n         * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n         *\n         * All the attributes of this calls are optional.\n         *\n         * Part of `@stomp/rx-stomp`\n         */\n        var RxStompConfig = /** @class */function () {\n          function RxStompConfig() {}\n          return RxStompConfig;\n        }();\n        exports.RxStompConfig = RxStompConfig;\n\n        /***/\n      },\n\n      /***/\"./src/rx-stomp-rpc-config.ts\":\n      /*!************************************!*\\\n        !*** ./src/rx-stomp-rpc-config.ts ***!\n        \\************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * RPC Config. See the guide for example.\n         */\n        var RxStompRPCConfig = /** @class */function () {\n          function RxStompRPCConfig() {}\n          return RxStompRPCConfig;\n        }();\n        exports.RxStompRPCConfig = RxStompRPCConfig;\n\n        /***/\n      },\n\n      /***/\"./src/rx-stomp-rpc.ts\":\n      /*!*****************************!*\\\n        !*** ./src/rx-stomp-rpc.ts ***!\n        \\*****************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        var rxjs_1 = __webpack_require__( /*! rxjs */\"rxjs\");\n        var operators_1 = __webpack_require__( /*! rxjs/operators */\"rxjs/operators\");\n        var angular2_uuid_1 = __webpack_require__( /*! angular2-uuid */\"./node_modules/angular2-uuid/index.js\");\n        /**\n         * An implementation of Remote Procedure Call (RPC) using messaging.\n         *\n         * Please see the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for details.\n         *\n         * Part of `@stomp/rx-stomp`\n         */\n        var RxStompRPC = /** @class */function () {\n          /**\n           * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for details.\n           */\n          function RxStompRPC(rxStomp, stompRPCConfig) {\n            var _this = this;\n            this.rxStomp = rxStomp;\n            this.stompRPCConfig = stompRPCConfig;\n            this._replyQueueName = '/temp-queue/rpc-replies';\n            this._setupReplyQueue = function () {\n              return _this.rxStomp.unhandledMessage$;\n            };\n            if (stompRPCConfig) {\n              if (stompRPCConfig.replyQueueName) {\n                this._replyQueueName = stompRPCConfig.replyQueueName;\n              }\n              if (stompRPCConfig.setupReplyQueue) {\n                this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n              }\n            }\n          }\n          /**\n           * Make an RPC request.\n           * See the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for example.\n           *\n           * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n           */\n          RxStompRPC.prototype.rpc = function (params) {\n            // We know there will be only one message in reply\n            return this.stream(params).pipe(operators_1.first());\n          };\n          /**\n           * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html).\n           *\n           * Note: This call internally takes care of generating a correlation id,\n           * however, if `correlation-id` is passed via `headers`, that will be used instead.\n           */\n          RxStompRPC.prototype.stream = function (params) {\n            var _this = this;\n            var headers = Object.assign({}, params.headers || {});\n            var destination = params.destination,\n              body = params.body,\n              binaryBody = params.binaryBody;\n            if (!this._repliesObservable) {\n              this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n            }\n            return rxjs_1.Observable.create(function (rpcObserver) {\n              var defaultMessagesSubscription;\n              var correlationId = headers['correlation-id'] || angular2_uuid_1.UUID.UUID();\n              defaultMessagesSubscription = _this._repliesObservable.pipe(operators_1.filter(function (message) {\n                return message.headers['correlation-id'] === correlationId;\n              })).subscribe(function (message) {\n                rpcObserver.next(message);\n              });\n              // send an RPC request\n              headers['reply-to'] = _this._replyQueueName;\n              headers['correlation-id'] = correlationId;\n              _this.rxStomp.publish({\n                destination: destination,\n                body: body,\n                binaryBody: binaryBody,\n                headers: headers\n              });\n              return function () {\n                defaultMessagesSubscription.unsubscribe();\n              };\n            });\n          };\n          return RxStompRPC;\n        }();\n        exports.RxStompRPC = RxStompRPC;\n\n        /***/\n      },\n\n      /***/\"./src/rx-stomp-state.ts\":\n      /*!*******************************!*\\\n        !*** ./src/rx-stomp-state.ts ***!\n        \\*******************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Possible states for the RxStomp\n         *\n         * Part of `@stomp/rx-stomp`\n         */\n        var RxStompState;\n        (function (RxStompState) {\n          RxStompState[RxStompState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n          RxStompState[RxStompState[\"OPEN\"] = 1] = \"OPEN\";\n          RxStompState[RxStompState[\"CLOSING\"] = 2] = \"CLOSING\";\n          RxStompState[RxStompState[\"CLOSED\"] = 3] = \"CLOSED\";\n        })(RxStompState = exports.RxStompState || (exports.RxStompState = {}));\n\n        /***/\n      },\n\n      /***/\"./src/rx-stomp.ts\":\n      /*!*************************!*\\\n        !*** ./src/rx-stomp.ts ***!\n        \\*************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n          function adopt(value) {\n            return value instanceof P ? value : new P(function (resolve) {\n              resolve(value);\n            });\n          }\n          return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n              try {\n                step(generator.next(value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n            function rejected(value) {\n              try {\n                step(generator[\"throw\"](value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n            function step(result) {\n              result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n          });\n        };\n        var __generator = this && this.__generator || function (thisArg, body) {\n          var _ = {\n              label: 0,\n              sent: function () {\n                if (t[0] & 1) throw t[1];\n                return t[1];\n              },\n              trys: [],\n              ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n          return g = {\n            next: verb(0),\n            \"throw\": verb(1),\n            \"return\": verb(2)\n          }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n            return this;\n          }), g;\n          function verb(n) {\n            return function (v) {\n              return step([n, v]);\n            };\n          }\n          function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_) try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n              if (y = 0, t) op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return {\n                    value: op[1],\n                    done: false\n                  };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n            if (op[0] & 5) throw op[1];\n            return {\n              value: op[0] ? op[1] : void 0,\n              done: true\n            };\n          }\n        };\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        var rxjs_1 = __webpack_require__( /*! rxjs */\"rxjs\");\n        var operators_1 = __webpack_require__( /*! rxjs/operators */\"rxjs/operators\");\n        var stompjs_1 = __webpack_require__( /*! @stomp/stompjs */\"@stomp/stompjs\");\n        var rx_stomp_state_1 = __webpack_require__( /*! ./rx-stomp-state */\"./src/rx-stomp-state.ts\");\n        /**\n         * This is the main Stomp Client.\n         * Typically you will create an instance of this to connect to the STOMP broker.\n         *\n         * This wraps [@stomp/stompjs]{@link https://github.com/stomp-js/stompjs}\n         * {@link Client} class.\n         *\n         * The key difference is that it exposes operations as RxJS Observables.\n         * For example when a STOMP endpoint is subscribed it returns an Observable\n         * that will stream all received messages.\n         *\n         * With exception of beforeConnect, functionality related to all callbacks in\n         * [@stomp/stompjs Client]{@link Client}\n         * is exposed as Observables/Subjects/BehaviorSubjects.\n         *\n         * RxStomp also tries to transparently handle connection failures.\n         *\n         * Part of `@stomp/rx-stomp`\n         */\n        var RxStomp = /** @class */function () {\n          /**\n           * Constructor\n           */\n          function RxStomp() {\n            var _this = this;\n            /**\n             * Internal array to hold locally queued messages when STOMP broker is not connected.\n             */\n            this._queuedMessages = [];\n            this._stompClient = new stompjs_1.Client();\n            var noOp = function () {};\n            // Before connect is no op by default\n            this._beforeConnect = noOp;\n            // debug is no-op by default\n            this._debug = noOp;\n            // Initial state is CLOSED\n            this._connectionStatePre$ = new rxjs_1.BehaviorSubject(rx_stomp_state_1.RxStompState.CLOSED);\n            this._connectedPre$ = this._connectionStatePre$.pipe(operators_1.filter(function (currentState) {\n              return currentState === rx_stomp_state_1.RxStompState.OPEN;\n            }));\n            // Initial state is CLOSED\n            this.connectionState$ = new rxjs_1.BehaviorSubject(rx_stomp_state_1.RxStompState.CLOSED);\n            this.connected$ = this.connectionState$.pipe(operators_1.filter(function (currentState) {\n              return currentState === rx_stomp_state_1.RxStompState.OPEN;\n            }));\n            // Setup sending queuedMessages\n            this.connected$.subscribe(function () {\n              _this._sendQueuedMessages();\n            });\n            this._serverHeadersBehaviourSubject$ = new rxjs_1.BehaviorSubject(null);\n            this.serverHeaders$ = this._serverHeadersBehaviourSubject$.pipe(operators_1.filter(function (headers) {\n              return headers !== null;\n            }));\n            this.stompErrors$ = new rxjs_1.Subject();\n            this.unhandledMessage$ = new rxjs_1.Subject();\n            this.unhandledReceipts$ = new rxjs_1.Subject();\n            this.unhandledFrame$ = new rxjs_1.Subject();\n            this.webSocketErrors$ = new rxjs_1.Subject();\n          }\n          Object.defineProperty(RxStomp.prototype, \"stompClient\", {\n            /**\n             * Instance of actual\n             * [@stomp/stompjs]{@link https://github.com/stomp-js/stompjs}\n             * {@link Client}.\n             *\n             * **Be careful in calling methods on it directly - you may get unintended consequences.**\n             */\n            get: function () {\n              return this._stompClient;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          /**\n           * Set configuration. This method may be called multiple times.\n           * Each call will add to the existing configuration.\n           *\n           * Example:\n           *\n           * ```javascript\n           *        const rxStomp = new RxStomp();\n           *        rxStomp.configure({\n           *          brokerURL: 'ws://127.0.0.1:15674/ws',\n           *          connectHeaders: {\n           *            login: 'guest',\n           *            passcode: 'guest'\n           *          },\n           *          heartbeatIncoming: 0,\n           *          heartbeatOutgoing: 20000,\n           *          reconnectDelay: 200,\n           *          debug: (msg: string): void => {\n           *            console.log(new Date(), msg);\n           *          }\n           *        });\n           *        rxStomp.activate();\n           * ```\n           *\n           * Maps to: [Client#configure]{@link Client#configure}\n           */\n          RxStomp.prototype.configure = function (rxStompConfig) {\n            var stompConfig = Object.assign({}, rxStompConfig);\n            if (stompConfig.beforeConnect) {\n              this._beforeConnect = stompConfig.beforeConnect;\n              delete stompConfig.beforeConnect;\n            }\n            // RxStompConfig has subset of StompConfig fields\n            this._stompClient.configure(stompConfig);\n            if (stompConfig.debug) {\n              this._debug = stompConfig.debug;\n            }\n          };\n          /**\n           * Initiate the connection with the broker.\n           * If the connection breaks, as per [RxStompConfig#reconnectDelay]{@link RxStompConfig#reconnectDelay},\n           * it will keep trying to reconnect.\n           *\n           * Call [RxStomp#deactivate]{@link RxStomp#deactivate} to disconnect and stop reconnection attempts.\n           *\n           * Maps to: [Client#activate]{@link Client#activate}\n           */\n          RxStomp.prototype.activate = function () {\n            var _this = this;\n            this._stompClient.configure({\n              beforeConnect: function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        this._changeState(rx_stomp_state_1.RxStompState.CONNECTING);\n                        // Call handler\n                        return [4 /*yield*/, this._beforeConnect(this)];\n                      case 1:\n                        // Call handler\n                        _a.sent();\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              },\n\n              onConnect: function (frame) {\n                _this._serverHeadersBehaviourSubject$.next(frame.headers);\n                // Indicate our connected state to observers\n                _this._changeState(rx_stomp_state_1.RxStompState.OPEN);\n              },\n              onStompError: function (frame) {\n                // Trigger the frame subject\n                _this.stompErrors$.next(frame);\n              },\n              onWebSocketClose: function () {\n                _this._changeState(rx_stomp_state_1.RxStompState.CLOSED);\n              },\n              onUnhandledMessage: function (message) {\n                _this.unhandledMessage$.next(message);\n              },\n              onUnhandledReceipt: function (frame) {\n                _this.unhandledReceipts$.next(frame);\n              },\n              onUnhandledFrame: function (frame) {\n                _this.unhandledFrame$.next(frame);\n              },\n              onWebSocketError: function (evt) {\n                _this.webSocketErrors$.next(evt);\n              }\n            });\n            // Attempt connection\n            this._stompClient.activate();\n          };\n          /**\n           * Disconnect if connected and stop auto reconnect loop.\n           * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\n           *\n           * To reactivate you can call [RxStomp#activate]{@link RxStomp#activate}.\n           *\n           * Maps to: [Client#deactivate]{@link Client#deactivate}\n           */\n          RxStomp.prototype.deactivate = function () {\n            // Disconnect if connected. Callback will set CLOSED state\n            this._stompClient.deactivate();\n            var stompState = this.connectionState$.getValue();\n            if (stompState === rx_stomp_state_1.RxStompState.OPEN) {\n              // Notify observers that we are disconnecting!\n              this._changeState(rx_stomp_state_1.RxStompState.CLOSING);\n            }\n            // This is bit tricky situation, it would be better handled at stompjs level\n            if (stompState === rx_stomp_state_1.RxStompState.CONNECTING) {\n              // Notify observers that we are disconnecting!\n              this._changeState(rx_stomp_state_1.RxStompState.CLOSED);\n            }\n          };\n          /**\n           * It will return `true` if STOMP broker is connected and `false` otherwise.\n           */\n          RxStomp.prototype.connected = function () {\n            return this.connectionState$.getValue() === rx_stomp_state_1.RxStompState.OPEN;\n          };\n          Object.defineProperty(RxStomp.prototype, \"active\", {\n            /**\n             * If the client is active (connected or going to reconnect).\n             *\n             *  Maps to: [Client#active]{@link Client#active}\n             */\n            get: function () {\n              return this.stompClient.active;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          /**\n           * Send a message to a named destination. Refer to your STOMP broker documentation for types\n           * and naming of destinations.\n           *\n           * STOMP protocol specifies and suggests some headers and also allows broker specific headers.\n           *\n           * `body` must be String.\n           * You will need to covert the payload to string in case it is not string (e.g. JSON).\n           *\n           * To send a binary message body use binaryBody parameter. It should be a\n           * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n           * Sometimes brokers may not support binary frames out of the box.\n           * Please check your broker documentation.\n           *\n           * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n           * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n           * For binary messages `content-length` header is always added.\n           *\n           * Caution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\n           * and `content-length` header is missing.\n           *\n           * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n           * publish queued messages as soon as the broker gets connected.\n           * If you do not want that behavior,\n           * please set [retryIfDisconnected]{@link IRxStompPublishParams#retryIfDisconnected} to `false`\n           * in the parameters.\n           * When `false`, this function will raise an error if message could not be sent immediately.\n           *\n           * Maps to: [Client#publish]{@link Client#publish}\n           *\n           * See: {@link IRxStompPublishParams} and {@link IPublishParams}\n           *\n           * ```javascript\n           *        rxStomp.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n           *\n           *        // Only destination is mandatory parameter\n           *        rxStomp.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n           *\n           *        // Skip content-length header in the frame to the broker\n           *        rxStomp.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n           *\n           *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n           *        // setting content-type header is not mandatory, however a good practice\n           *        rxStomp.publish({destination: '/topic/special', binaryBody: binaryData,\n           *                         headers: {'content-type': 'application/octet-stream'}});\n           * ```\n           */\n          RxStomp.prototype.publish = function (parameters) {\n            // retry behaviour is defaulted to true\n            var shouldRetry = parameters.retryIfDisconnected == null ? true : parameters.retryIfDisconnected;\n            if (this.connected()) {\n              this._stompClient.publish(parameters);\n            } else if (shouldRetry) {\n              this._debug(\"Not connected, queueing\");\n              this._queuedMessages.push(parameters);\n            } else {\n              throw new Error('Cannot publish while broker is not connected');\n            }\n          };\n          /** It will send queued messages. */\n          RxStomp.prototype._sendQueuedMessages = function () {\n            var queuedMessages = this._queuedMessages;\n            this._queuedMessages = [];\n            if (queuedMessages.length === 0) {\n              return;\n            }\n            this._debug(\"Will try sending  \" + queuedMessages.length + \" queued message(s)\");\n            for (var _i = 0, queuedMessages_1 = queuedMessages; _i < queuedMessages_1.length; _i++) {\n              var queuedMessage = queuedMessages_1[_i];\n              this._debug(\"Attempting to send \" + queuedMessage);\n              this.publish(queuedMessage);\n            }\n          };\n          /**\n           * It will subscribe to server message queues\n           *\n           * This method can be safely called even if the STOMP broker is not connected.\n           * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n           *\n           * Note that messages might be missed during reconnect. This issue is not specific\n           * to this library but the way STOMP brokers are designed to work.\n           *\n           * This method in the underlying library is called `subscribe`.\n           * In earlier version it was called `subscribe` here as well.\n           * However `subscribe` is also used by RxJS and code read quite strange with two subscribe calls\n           * following each other and both meaning very different things.\n           *\n           * Maps to: [Client#subscribe]{@link Client#subscribe}\n           */\n          RxStomp.prototype.watch = function (destination, headers) {\n            var _this = this;\n            if (headers === void 0) {\n              headers = {};\n            }\n            /* Well the logic is complicated but works beautifully. RxJS is indeed wonderful.\n             *\n             * We need to activate the underlying subscription immediately if Stomp is connected. If not it should\n             * subscribe when it gets next connected. Further it should re establish the subscription whenever Stomp\n             * successfully reconnects.\n             *\n             * Actual implementation is simple, we filter the BehaviourSubject 'state' so that we can trigger whenever Stomp is\n             * connected. Since 'state' is a BehaviourSubject, if Stomp is already connected, it will immediately trigger.\n             *\n             * The observable that we return to caller remains same across all reconnects, so no special handling needed at\n             * the message subscriber.\n             */\n            this._debug(\"Request to subscribe \" + destination);\n            // By default auto acknowledgement of messages\n            if (!headers.ack) {\n              headers.ack = 'auto';\n            }\n            var coldObservable = rxjs_1.Observable.create(function (messages) {\n              /*\n               * These variables will be used as part of the closure and work their magic during unsubscribe\n               */\n              var stompSubscription;\n              var stompConnectedSubscription;\n              stompConnectedSubscription = _this._connectedPre$.subscribe(function () {\n                _this._debug(\"Will subscribe to \" + destination);\n                stompSubscription = _this._stompClient.subscribe(destination, function (message) {\n                  messages.next(message);\n                }, headers);\n              });\n              return function () {\n                _this._debug(\"Stop watching connection state (for \" + destination + \")\");\n                stompConnectedSubscription.unsubscribe();\n                if (_this.connected()) {\n                  _this._debug(\"Will unsubscribe from \" + destination + \" at Stomp\");\n                  stompSubscription.unsubscribe();\n                } else {\n                  _this._debug(\"Stomp not connected, no need to unsubscribe from \" + destination + \" at Stomp\");\n                }\n              };\n            });\n            /**\n             * Important - convert it to hot Observable - otherwise, if the user code subscribes\n             * to this observable twice, it will subscribe twice to Stomp broker. (This was happening in the current example).\n             * A long but good explanatory article at https://medium.com/@benlesh/hot-vs-cold-observables-f8094ed53339\n             */\n            return coldObservable.pipe(operators_1.share());\n          };\n          /**\n           * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n           * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n           * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n           * random number or a combination may be used.\n           *\n           * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n           * The operation needs to be matched based in the value of the receipt-id.\n           *\n           * This method allow watching for a receipt and invoke the callback\n           * when corresponding receipt has been received.\n           *\n           * The actual {@link Frame}\n           * will be passed as parameter to the callback.\n           *\n           * Example:\n           * ```javascript\n           *        // Publishing with acknowledgement\n           *        let receiptId = randomText();\n           *\n           *        rxStomp.watchForReceipt(receiptId, function() {\n           *          // Will be called after server acknowledges\n           *        });\n           *        rxStomp.publish({destination: '/topic/special', headers: {receipt: receiptId}, body: msg});\n           * ```\n           *\n           * Maps to: [Client#watchForReceipt]{@link Client#watchForReceipt}\n           */\n          RxStomp.prototype.watchForReceipt = function (receiptId, callback) {\n            this._stompClient.watchForReceipt(receiptId, callback);\n          };\n          RxStomp.prototype._changeState = function (state) {\n            this._connectionStatePre$.next(state);\n            this.connectionState$.next(state);\n          };\n          return RxStomp;\n        }();\n        exports.RxStomp = RxStomp;\n\n        /***/\n      },\n\n      /***/0:\n      /*!****************************!*\\\n        !*** multi ./src/index.ts ***!\n        \\****************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        module.exports = __webpack_require__( /*! /home/kdeepak/MyWork/Tech/stomp/rx-stomp/src/index.ts */\"./src/index.ts\");\n\n        /***/\n      },\n\n      /***/\"@stomp/stompjs\":\n      /*!*******************************************************************************************************************!*\\\n        !*** external {\"commonjs\":\"@stomp/stompjs\",\"commonjs2\":\"@stomp/stompjs\",\"amd\":\"@stomp/stompjs\",\"root\":\"StompJs\"} ***!\n        \\*******************************************************************************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE__stomp_stompjs__;\n\n        /***/\n      },\n\n      /***/\"rxjs\":\n      /*!************************************************************************************!*\\\n        !*** external {\"root\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"commonjs2\":\"rxjs\",\"amd\":\"rxjs\"} ***!\n        \\************************************************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs__;\n\n        /***/\n      },\n\n      /***/\"rxjs/operators\":\n      /*!******************************************************************************************************************************!*\\\n        !*** external {\"root\":[\"rxjs\",\"operators\"],\"commonjs\":\"rxjs/operators\",\"commonjs2\":\"rxjs/operators\",\"amd\":\"rxjs/operators\"} ***!\n        \\******************************************************************************************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_operators__;\n\n        /***/\n      }\n\n      /******/\n    })\n  );\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__stomp_stompjs__","__WEBPACK_EXTERNAL_MODULE_rxjs__","__WEBPACK_EXTERNAL_MODULE_rxjs_operators__","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","./node_modules/angular2-uuid/index.js","UUID","window","crypto","getRandomValues","buf","Uint16Array","pad4","random4","num","ret","toString","length","Math","floor","random","substring","./src/index.ts","__export","./src/rx-stomp-config.ts","RxStompConfig","./src/rx-stomp-rpc-config.ts","RxStompRPCConfig","./src/rx-stomp-rpc.ts","rxjs_1","operators_1","angular2_uuid_1","RxStompRPC","rxStomp","stompRPCConfig","_this","_replyQueueName","_setupReplyQueue","unhandledMessage$","replyQueueName","setupReplyQueue","rpc","params","stream","pipe","first","headers","assign","destination","body","binaryBody","_repliesObservable","Observable","rpcObserver","defaultMessagesSubscription","correlationId","filter","message","subscribe","next","publish","unsubscribe","./src/rx-stomp-state.ts","RxStompState","./src/rx-stomp.ts","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","e","rejected","result","done","then","apply","__generator","_","label","sent","trys","ops","f","y","g","verb","iterator","v","op","TypeError","pop","push","stompjs_1","rx_stomp_state_1","RxStomp","_queuedMessages","_stompClient","Client","noOp","_beforeConnect","_debug","_connectionStatePre$","BehaviorSubject","CLOSED","_connectedPre$","currentState","OPEN","connectionState$","connected$","_sendQueuedMessages","_serverHeadersBehaviourSubject$","serverHeaders$","stompErrors$","Subject","unhandledReceipts$","unhandledFrame$","webSocketErrors$","configurable","configure","rxStompConfig","stompConfig","beforeConnect","debug","activate","_a","_changeState","CONNECTING","onConnect","frame","onStompError","onWebSocketClose","onUnhandledMessage","onUnhandledReceipt","onUnhandledFrame","onWebSocketError","evt","deactivate","stompState","getValue","CLOSING","connected","stompClient","active","parameters","shouldRetry","retryIfDisconnected","Error","queuedMessages","_i","queuedMessages_1","queuedMessage","watch","ack","coldObservable","messages","stompSubscription","stompConnectedSubscription","share","watchForReceipt","receiptId","callback","state","@stomp/stompjs","rxjs","rxjs/operators"],"sources":["C:/Users/GersonJr/Desktop/projetos/angular/projeto-websocket/node_modules/@stomp/rx-stomp/bundles/rx-stomp.umd.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@stomp/stompjs\"), require(\"rxjs\"), require(\"rxjs/operators\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"RxStomp\", [\"@stomp/stompjs\", \"rxjs\", \"rxjs/operators\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RxStomp\"] = factory(require(\"@stomp/stompjs\"), require(\"rxjs\"), require(\"rxjs/operators\"));\n\telse\n\t\troot[\"RxStomp\"] = factory(root[\"StompJs\"], root[\"rxjs\"], root[\"rxjs\"][\"operators\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__stomp_stompjs__, __WEBPACK_EXTERNAL_MODULE_rxjs__, __WEBPACK_EXTERNAL_MODULE_rxjs_operators__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/angular2-uuid/index.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/angular2-uuid/index.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar UUID = (function () {\n    function UUID() {\n        // no-op\n    }\n    UUID.UUID = function () {\n        if (typeof (window) !== \"undefined\" && typeof (window.crypto) !== \"undefined\" && typeof (window.crypto.getRandomValues) !== \"undefined\") {\n            // If we have a cryptographically secure PRNG, use that\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n            var buf = new Uint16Array(8);\n            window.crypto.getRandomValues(buf);\n            return (this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]));\n        }\n        else {\n            // Otherwise, just use Math.random\n            // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n            // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\n            return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" +\n                this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\n        }\n    };\n    UUID.pad4 = function (num) {\n        var ret = num.toString(16);\n        while (ret.length < 4) {\n            ret = \"0\" + ret;\n        }\n        return ret;\n    };\n    UUID.random4 = function () {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    };\n    return UUID;\n}());\nexports.UUID = UUID;\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./rx-stomp-config */ \"./src/rx-stomp-config.ts\"));\n__export(__webpack_require__(/*! ./rx-stomp */ \"./src/rx-stomp.ts\"));\n__export(__webpack_require__(/*! ./rx-stomp-state */ \"./src/rx-stomp-state.ts\"));\n__export(__webpack_require__(/*! ./rx-stomp-rpc-config */ \"./src/rx-stomp-rpc-config.ts\"));\n__export(__webpack_require__(/*! ./rx-stomp-rpc */ \"./src/rx-stomp-rpc.ts\"));\n\n\n/***/ }),\n\n/***/ \"./src/rx-stomp-config.ts\":\n/*!********************************!*\\\n  !*** ./src/rx-stomp-config.ts ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nvar RxStompConfig = /** @class */ (function () {\n    function RxStompConfig() {\n    }\n    return RxStompConfig;\n}());\nexports.RxStompConfig = RxStompConfig;\n\n\n/***/ }),\n\n/***/ \"./src/rx-stomp-rpc-config.ts\":\n/*!************************************!*\\\n  !*** ./src/rx-stomp-rpc-config.ts ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * RPC Config. See the guide for example.\n */\nvar RxStompRPCConfig = /** @class */ (function () {\n    function RxStompRPCConfig() {\n    }\n    return RxStompRPCConfig;\n}());\nexports.RxStompRPCConfig = RxStompRPCConfig;\n\n\n/***/ }),\n\n/***/ \"./src/rx-stomp-rpc.ts\":\n/*!*****************************!*\\\n  !*** ./src/rx-stomp-rpc.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = __webpack_require__(/*! rxjs */ \"rxjs\");\nvar operators_1 = __webpack_require__(/*! rxjs/operators */ \"rxjs/operators\");\nvar angular2_uuid_1 = __webpack_require__(/*! angular2-uuid */ \"./node_modules/angular2-uuid/index.js\");\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nvar RxStompRPC = /** @class */ (function () {\n    /**\n     * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for details.\n     */\n    function RxStompRPC(rxStomp, stompRPCConfig) {\n        var _this = this;\n        this.rxStomp = rxStomp;\n        this.stompRPCConfig = stompRPCConfig;\n        this._replyQueueName = '/temp-queue/rpc-replies';\n        this._setupReplyQueue = function () {\n            return _this.rxStomp.unhandledMessage$;\n        };\n        if (stompRPCConfig) {\n            if (stompRPCConfig.replyQueueName) {\n                this._replyQueueName = stompRPCConfig.replyQueueName;\n            }\n            if (stompRPCConfig.setupReplyQueue) {\n                this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n            }\n        }\n    }\n    /**\n     * Make an RPC request.\n     * See the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for example.\n     *\n     * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n     */\n    RxStompRPC.prototype.rpc = function (params) {\n        // We know there will be only one message in reply\n        return this.stream(params).pipe(operators_1.first());\n    };\n    /**\n     * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html).\n     *\n     * Note: This call internally takes care of generating a correlation id,\n     * however, if `correlation-id` is passed via `headers`, that will be used instead.\n     */\n    RxStompRPC.prototype.stream = function (params) {\n        var _this = this;\n        var headers = Object.assign({}, params.headers || {});\n        var destination = params.destination, body = params.body, binaryBody = params.binaryBody;\n        if (!this._repliesObservable) {\n            this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n        }\n        return rxjs_1.Observable.create(function (rpcObserver) {\n            var defaultMessagesSubscription;\n            var correlationId = headers['correlation-id'] || angular2_uuid_1.UUID.UUID();\n            defaultMessagesSubscription = _this._repliesObservable.pipe(operators_1.filter(function (message) {\n                return message.headers['correlation-id'] === correlationId;\n            })).subscribe(function (message) {\n                rpcObserver.next(message);\n            });\n            // send an RPC request\n            headers['reply-to'] = _this._replyQueueName;\n            headers['correlation-id'] = correlationId;\n            _this.rxStomp.publish({ destination: destination, body: body, binaryBody: binaryBody, headers: headers });\n            return function () {\n                defaultMessagesSubscription.unsubscribe();\n            };\n        });\n    };\n    return RxStompRPC;\n}());\nexports.RxStompRPC = RxStompRPC;\n\n\n/***/ }),\n\n/***/ \"./src/rx-stomp-state.ts\":\n/*!*******************************!*\\\n  !*** ./src/rx-stomp-state.ts ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Possible states for the RxStomp\n *\n * Part of `@stomp/rx-stomp`\n */\nvar RxStompState;\n(function (RxStompState) {\n    RxStompState[RxStompState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    RxStompState[RxStompState[\"OPEN\"] = 1] = \"OPEN\";\n    RxStompState[RxStompState[\"CLOSING\"] = 2] = \"CLOSING\";\n    RxStompState[RxStompState[\"CLOSED\"] = 3] = \"CLOSED\";\n})(RxStompState = exports.RxStompState || (exports.RxStompState = {}));\n\n\n/***/ }),\n\n/***/ \"./src/rx-stomp.ts\":\n/*!*************************!*\\\n  !*** ./src/rx-stomp.ts ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = __webpack_require__(/*! rxjs */ \"rxjs\");\nvar operators_1 = __webpack_require__(/*! rxjs/operators */ \"rxjs/operators\");\nvar stompjs_1 = __webpack_require__(/*! @stomp/stompjs */ \"@stomp/stompjs\");\nvar rx_stomp_state_1 = __webpack_require__(/*! ./rx-stomp-state */ \"./src/rx-stomp-state.ts\");\n/**\n * This is the main Stomp Client.\n * Typically you will create an instance of this to connect to the STOMP broker.\n *\n * This wraps [@stomp/stompjs]{@link https://github.com/stomp-js/stompjs}\n * {@link Client} class.\n *\n * The key difference is that it exposes operations as RxJS Observables.\n * For example when a STOMP endpoint is subscribed it returns an Observable\n * that will stream all received messages.\n *\n * With exception of beforeConnect, functionality related to all callbacks in\n * [@stomp/stompjs Client]{@link Client}\n * is exposed as Observables/Subjects/BehaviorSubjects.\n *\n * RxStomp also tries to transparently handle connection failures.\n *\n * Part of `@stomp/rx-stomp`\n */\nvar RxStomp = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function RxStomp() {\n        var _this = this;\n        /**\n         * Internal array to hold locally queued messages when STOMP broker is not connected.\n         */\n        this._queuedMessages = [];\n        this._stompClient = new stompjs_1.Client();\n        var noOp = function () { };\n        // Before connect is no op by default\n        this._beforeConnect = noOp;\n        // debug is no-op by default\n        this._debug = noOp;\n        // Initial state is CLOSED\n        this._connectionStatePre$ = new rxjs_1.BehaviorSubject(rx_stomp_state_1.RxStompState.CLOSED);\n        this._connectedPre$ = this._connectionStatePre$.pipe(operators_1.filter(function (currentState) {\n            return currentState === rx_stomp_state_1.RxStompState.OPEN;\n        }));\n        // Initial state is CLOSED\n        this.connectionState$ = new rxjs_1.BehaviorSubject(rx_stomp_state_1.RxStompState.CLOSED);\n        this.connected$ = this.connectionState$.pipe(operators_1.filter(function (currentState) {\n            return currentState === rx_stomp_state_1.RxStompState.OPEN;\n        }));\n        // Setup sending queuedMessages\n        this.connected$.subscribe(function () {\n            _this._sendQueuedMessages();\n        });\n        this._serverHeadersBehaviourSubject$ = new rxjs_1.BehaviorSubject(null);\n        this.serverHeaders$ = this._serverHeadersBehaviourSubject$.pipe(operators_1.filter(function (headers) {\n            return headers !== null;\n        }));\n        this.stompErrors$ = new rxjs_1.Subject();\n        this.unhandledMessage$ = new rxjs_1.Subject();\n        this.unhandledReceipts$ = new rxjs_1.Subject();\n        this.unhandledFrame$ = new rxjs_1.Subject();\n        this.webSocketErrors$ = new rxjs_1.Subject();\n    }\n    Object.defineProperty(RxStomp.prototype, \"stompClient\", {\n        /**\n         * Instance of actual\n         * [@stomp/stompjs]{@link https://github.com/stomp-js/stompjs}\n         * {@link Client}.\n         *\n         * **Be careful in calling methods on it directly - you may get unintended consequences.**\n         */\n        get: function () {\n            return this._stompClient;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set configuration. This method may be called multiple times.\n     * Each call will add to the existing configuration.\n     *\n     * Example:\n     *\n     * ```javascript\n     *        const rxStomp = new RxStomp();\n     *        rxStomp.configure({\n     *          brokerURL: 'ws://127.0.0.1:15674/ws',\n     *          connectHeaders: {\n     *            login: 'guest',\n     *            passcode: 'guest'\n     *          },\n     *          heartbeatIncoming: 0,\n     *          heartbeatOutgoing: 20000,\n     *          reconnectDelay: 200,\n     *          debug: (msg: string): void => {\n     *            console.log(new Date(), msg);\n     *          }\n     *        });\n     *        rxStomp.activate();\n     * ```\n     *\n     * Maps to: [Client#configure]{@link Client#configure}\n     */\n    RxStomp.prototype.configure = function (rxStompConfig) {\n        var stompConfig = Object.assign({}, rxStompConfig);\n        if (stompConfig.beforeConnect) {\n            this._beforeConnect = stompConfig.beforeConnect;\n            delete stompConfig.beforeConnect;\n        }\n        // RxStompConfig has subset of StompConfig fields\n        this._stompClient.configure(stompConfig);\n        if (stompConfig.debug) {\n            this._debug = stompConfig.debug;\n        }\n    };\n    /**\n     * Initiate the connection with the broker.\n     * If the connection breaks, as per [RxStompConfig#reconnectDelay]{@link RxStompConfig#reconnectDelay},\n     * it will keep trying to reconnect.\n     *\n     * Call [RxStomp#deactivate]{@link RxStomp#deactivate} to disconnect and stop reconnection attempts.\n     *\n     * Maps to: [Client#activate]{@link Client#activate}\n     */\n    RxStomp.prototype.activate = function () {\n        var _this = this;\n        this._stompClient.configure({\n            beforeConnect: function () { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            this._changeState(rx_stomp_state_1.RxStompState.CONNECTING);\n                            // Call handler\n                            return [4 /*yield*/, this._beforeConnect(this)];\n                        case 1:\n                            // Call handler\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            }); },\n            onConnect: function (frame) {\n                _this._serverHeadersBehaviourSubject$.next(frame.headers);\n                // Indicate our connected state to observers\n                _this._changeState(rx_stomp_state_1.RxStompState.OPEN);\n            },\n            onStompError: function (frame) {\n                // Trigger the frame subject\n                _this.stompErrors$.next(frame);\n            },\n            onWebSocketClose: function () {\n                _this._changeState(rx_stomp_state_1.RxStompState.CLOSED);\n            },\n            onUnhandledMessage: function (message) {\n                _this.unhandledMessage$.next(message);\n            },\n            onUnhandledReceipt: function (frame) {\n                _this.unhandledReceipts$.next(frame);\n            },\n            onUnhandledFrame: function (frame) {\n                _this.unhandledFrame$.next(frame);\n            },\n            onWebSocketError: function (evt) {\n                _this.webSocketErrors$.next(evt);\n            }\n        });\n        // Attempt connection\n        this._stompClient.activate();\n    };\n    /**\n     * Disconnect if connected and stop auto reconnect loop.\n     * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\n     *\n     * To reactivate you can call [RxStomp#activate]{@link RxStomp#activate}.\n     *\n     * Maps to: [Client#deactivate]{@link Client#deactivate}\n     */\n    RxStomp.prototype.deactivate = function () {\n        // Disconnect if connected. Callback will set CLOSED state\n        this._stompClient.deactivate();\n        var stompState = this.connectionState$.getValue();\n        if (stompState === rx_stomp_state_1.RxStompState.OPEN) {\n            // Notify observers that we are disconnecting!\n            this._changeState(rx_stomp_state_1.RxStompState.CLOSING);\n        }\n        // This is bit tricky situation, it would be better handled at stompjs level\n        if (stompState === rx_stomp_state_1.RxStompState.CONNECTING) {\n            // Notify observers that we are disconnecting!\n            this._changeState(rx_stomp_state_1.RxStompState.CLOSED);\n        }\n    };\n    /**\n     * It will return `true` if STOMP broker is connected and `false` otherwise.\n     */\n    RxStomp.prototype.connected = function () {\n        return this.connectionState$.getValue() === rx_stomp_state_1.RxStompState.OPEN;\n    };\n    Object.defineProperty(RxStomp.prototype, \"active\", {\n        /**\n         * If the client is active (connected or going to reconnect).\n         *\n         *  Maps to: [Client#active]{@link Client#active}\n         */\n        get: function () {\n            return this.stompClient.active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Send a message to a named destination. Refer to your STOMP broker documentation for types\n     * and naming of destinations.\n     *\n     * STOMP protocol specifies and suggests some headers and also allows broker specific headers.\n     *\n     * `body` must be String.\n     * You will need to covert the payload to string in case it is not string (e.g. JSON).\n     *\n     * To send a binary message body use binaryBody parameter. It should be a\n     * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n     * Sometimes brokers may not support binary frames out of the box.\n     * Please check your broker documentation.\n     *\n     * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n     * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n     * For binary messages `content-length` header is always added.\n     *\n     * Caution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\n     * and `content-length` header is missing.\n     *\n     * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n     * publish queued messages as soon as the broker gets connected.\n     * If you do not want that behavior,\n     * please set [retryIfDisconnected]{@link IRxStompPublishParams#retryIfDisconnected} to `false`\n     * in the parameters.\n     * When `false`, this function will raise an error if message could not be sent immediately.\n     *\n     * Maps to: [Client#publish]{@link Client#publish}\n     *\n     * See: {@link IRxStompPublishParams} and {@link IPublishParams}\n     *\n     * ```javascript\n     *        rxStomp.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n     *\n     *        // Only destination is mandatory parameter\n     *        rxStomp.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n     *\n     *        // Skip content-length header in the frame to the broker\n     *        rxStomp.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n     *\n     *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n     *        // setting content-type header is not mandatory, however a good practice\n     *        rxStomp.publish({destination: '/topic/special', binaryBody: binaryData,\n     *                         headers: {'content-type': 'application/octet-stream'}});\n     * ```\n     */\n    RxStomp.prototype.publish = function (parameters) {\n        // retry behaviour is defaulted to true\n        var shouldRetry = parameters.retryIfDisconnected == null\n            ? true\n            : parameters.retryIfDisconnected;\n        if (this.connected()) {\n            this._stompClient.publish(parameters);\n        }\n        else if (shouldRetry) {\n            this._debug(\"Not connected, queueing\");\n            this._queuedMessages.push(parameters);\n        }\n        else {\n            throw new Error('Cannot publish while broker is not connected');\n        }\n    };\n    /** It will send queued messages. */\n    RxStomp.prototype._sendQueuedMessages = function () {\n        var queuedMessages = this._queuedMessages;\n        this._queuedMessages = [];\n        if (queuedMessages.length === 0) {\n            return;\n        }\n        this._debug(\"Will try sending  \" + queuedMessages.length + \" queued message(s)\");\n        for (var _i = 0, queuedMessages_1 = queuedMessages; _i < queuedMessages_1.length; _i++) {\n            var queuedMessage = queuedMessages_1[_i];\n            this._debug(\"Attempting to send \" + queuedMessage);\n            this.publish(queuedMessage);\n        }\n    };\n    /**\n     * It will subscribe to server message queues\n     *\n     * This method can be safely called even if the STOMP broker is not connected.\n     * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n     *\n     * Note that messages might be missed during reconnect. This issue is not specific\n     * to this library but the way STOMP brokers are designed to work.\n     *\n     * This method in the underlying library is called `subscribe`.\n     * In earlier version it was called `subscribe` here as well.\n     * However `subscribe` is also used by RxJS and code read quite strange with two subscribe calls\n     * following each other and both meaning very different things.\n     *\n     * Maps to: [Client#subscribe]{@link Client#subscribe}\n     */\n    RxStomp.prototype.watch = function (destination, headers) {\n        var _this = this;\n        if (headers === void 0) { headers = {}; }\n        /* Well the logic is complicated but works beautifully. RxJS is indeed wonderful.\n         *\n         * We need to activate the underlying subscription immediately if Stomp is connected. If not it should\n         * subscribe when it gets next connected. Further it should re establish the subscription whenever Stomp\n         * successfully reconnects.\n         *\n         * Actual implementation is simple, we filter the BehaviourSubject 'state' so that we can trigger whenever Stomp is\n         * connected. Since 'state' is a BehaviourSubject, if Stomp is already connected, it will immediately trigger.\n         *\n         * The observable that we return to caller remains same across all reconnects, so no special handling needed at\n         * the message subscriber.\n         */\n        this._debug(\"Request to subscribe \" + destination);\n        // By default auto acknowledgement of messages\n        if (!headers.ack) {\n            headers.ack = 'auto';\n        }\n        var coldObservable = rxjs_1.Observable.create(function (messages) {\n            /*\n             * These variables will be used as part of the closure and work their magic during unsubscribe\n             */\n            var stompSubscription;\n            var stompConnectedSubscription;\n            stompConnectedSubscription = _this._connectedPre$.subscribe(function () {\n                _this._debug(\"Will subscribe to \" + destination);\n                stompSubscription = _this._stompClient.subscribe(destination, function (message) {\n                    messages.next(message);\n                }, headers);\n            });\n            return function () {\n                _this._debug(\"Stop watching connection state (for \" + destination + \")\");\n                stompConnectedSubscription.unsubscribe();\n                if (_this.connected()) {\n                    _this._debug(\"Will unsubscribe from \" + destination + \" at Stomp\");\n                    stompSubscription.unsubscribe();\n                }\n                else {\n                    _this._debug(\"Stomp not connected, no need to unsubscribe from \" + destination + \" at Stomp\");\n                }\n            };\n        });\n        /**\n         * Important - convert it to hot Observable - otherwise, if the user code subscribes\n         * to this observable twice, it will subscribe twice to Stomp broker. (This was happening in the current example).\n         * A long but good explanatory article at https://medium.com/@benlesh/hot-vs-cold-observables-f8094ed53339\n         */\n        return coldObservable.pipe(operators_1.share());\n    };\n    /**\n     * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n     * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n     * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n     * random number or a combination may be used.\n     *\n     * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n     * The operation needs to be matched based in the value of the receipt-id.\n     *\n     * This method allow watching for a receipt and invoke the callback\n     * when corresponding receipt has been received.\n     *\n     * The actual {@link Frame}\n     * will be passed as parameter to the callback.\n     *\n     * Example:\n     * ```javascript\n     *        // Publishing with acknowledgement\n     *        let receiptId = randomText();\n     *\n     *        rxStomp.watchForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *        rxStomp.publish({destination: '/topic/special', headers: {receipt: receiptId}, body: msg});\n     * ```\n     *\n     * Maps to: [Client#watchForReceipt]{@link Client#watchForReceipt}\n     */\n    RxStomp.prototype.watchForReceipt = function (receiptId, callback) {\n        this._stompClient.watchForReceipt(receiptId, callback);\n    };\n    RxStomp.prototype._changeState = function (state) {\n        this._connectionStatePre$.next(state);\n        this.connectionState$.next(state);\n    };\n    return RxStomp;\n}());\nexports.RxStomp = RxStomp;\n\n\n/***/ }),\n\n/***/ 0:\n/*!****************************!*\\\n  !*** multi ./src/index.ts ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! /home/kdeepak/MyWork/Tech/stomp/rx-stomp/src/index.ts */\"./src/index.ts\");\n\n\n/***/ }),\n\n/***/ \"@stomp/stompjs\":\n/*!*******************************************************************************************************************!*\\\n  !*** external {\"commonjs\":\"@stomp/stompjs\",\"commonjs2\":\"@stomp/stompjs\",\"amd\":\"@stomp/stompjs\",\"root\":\"StompJs\"} ***!\n  \\*******************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__stomp_stompjs__;\n\n/***/ }),\n\n/***/ \"rxjs\":\n/*!************************************************************************************!*\\\n  !*** external {\"root\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"commonjs2\":\"rxjs\",\"amd\":\"rxjs\"} ***!\n  \\************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_rxjs__;\n\n/***/ }),\n\n/***/ \"rxjs/operators\":\n/*!******************************************************************************************************************************!*\\\n  !*** external {\"root\":[\"rxjs\",\"operators\"],\"commonjs\":\"rxjs/operators\",\"commonjs2\":\"rxjs/operators\",\"amd\":\"rxjs/operators\"} ***!\n  \\******************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_operators__;\n\n/***/ })\n\n/******/ });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}