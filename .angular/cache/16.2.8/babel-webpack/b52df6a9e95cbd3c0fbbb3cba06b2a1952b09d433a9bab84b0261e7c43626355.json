{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@stomp/ng2-stompjs\";\nexport class WebsocketComponent {\n  constructor(rxStompService) {\n    this.rxStompService = rxStompService;\n    this.receivedMessages = [];\n    this.notifications = 0;\n  }\n  ngOnInit() {\n    /* this.topicSubscription =  */this.rxStompService.watch('/topic/notification').subscribe(message => {\n      this.receivedMessages.push(message.body);\n      this.notifications = JSON.parse(message.body).count;\n    });\n  }\n  ngOnDestroy() {\n    /* this.topicSubscription.unsubscribe(); */\n  }\n  onSendMessage() {\n    const message = `Message generated at ${new Date()}`;\n    this.rxStompService.publish({\n      destination: '/topic/notification',\n      body: message\n    });\n    console.log('>>>> ' + this.receivedMessages);\n  }\n  static #_ = this.ɵfac = function WebsocketComponent_Factory(t) {\n    return new (t || WebsocketComponent)(i0.ɵɵdirectiveInject(i1.RxStompService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WebsocketComponent,\n    selectors: [[\"app-websocket\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[2, \"text-align\", \"center\", \"margin-top\", \"150px\"], [2, \"font-size\", \"4em\"], [2, \"color\", \"red\"]],\n    template: function WebsocketComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \" Notifications : \");\n        i0.ɵɵelementStart(3, \"span\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"+\", ctx.notifications, \"\");\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["WebsocketComponent","constructor","rxStompService","receivedMessages","notifications","ngOnInit","watch","subscribe","message","push","body","JSON","parse","count","ngOnDestroy","onSendMessage","Date","publish","destination","console","log","_","i0","ɵɵdirectiveInject","i1","RxStompService","_2","selectors","decls","vars","consts","template","WebsocketComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["C:\\Users\\GersonJr\\Desktop\\projetos\\angular\\projeto-websocket\\src\\app\\websocket\\websocket.component.ts","C:\\Users\\GersonJr\\Desktop\\projetos\\angular\\projeto-websocket\\src\\app\\websocket\\websocket.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WebSocketService } from '../websocket.service';\nimport { Observable, Subscription, map } from 'rxjs';\nimport { RxStompService, StompService } from '@stomp/ng2-stompjs';\nimport { Message } from '@stomp/stompjs';\n\n@Component({\n  selector: 'app-websocket',\n  templateUrl: './websocket.component.html',\n  styleUrls: ['./websocket.component.css']\n})\nexport class WebsocketComponent {\n\n  public receivedMessages: string[] = [];\n  //private topicSubscription: Subscription;\n\n  data: Observable<any> | undefined;\n  public notifications: any = 0;\n\n  constructor(private rxStompService: RxStompService) {\n  }\n\n  ngOnInit() {\n    /* this.topicSubscription =  */this.rxStompService.watch('/topic/notification').subscribe((message: Message) => {\n      this.receivedMessages.push(message.body);\n      this.notifications = JSON.parse(message.body).count;\n    });\n  }\n\n  ngOnDestroy() {\n    /* this.topicSubscription.unsubscribe(); */\n  }\n\n  onSendMessage() {\n    const message = `Message generated at ${new Date}`;\n    this.rxStompService.publish({destination: '/topic/notification', body: message});\n    console.log('>>>> ' + this.receivedMessages);\n  }\n\n}","<div style=\"text-align:center; margin-top: 150px;\">\n\n  <h1 style=\"font-size: 4em;\">\n\n      Notifications : <span style=\"color: red;\">+{{ notifications }}</span>\n\n  </h1>\n\n</div>"],"mappings":";;AAWA,OAAM,MAAOA,kBAAkB;EAQ7BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAN3B,KAAAC,gBAAgB,GAAa,EAAE;IAI/B,KAAAC,aAAa,GAAQ,CAAC;EAG7B;EAEAC,QAAQA,CAAA;IACN,+BAA+B,IAAI,CAACH,cAAc,CAACI,KAAK,CAAC,qBAAqB,CAAC,CAACC,SAAS,CAAEC,OAAgB,IAAI;MAC7G,IAAI,CAACL,gBAAgB,CAACM,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC;MACxC,IAAI,CAACN,aAAa,GAAGO,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACE,IAAI,CAAC,CAACG,KAAK;IACrD,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT;EAAA;EAGFC,aAAaA,CAAA;IACX,MAAMP,OAAO,GAAG,wBAAwB,IAAIQ,IAAI,CAAJ,CAAI,EAAE;IAClD,IAAI,CAACd,cAAc,CAACe,OAAO,CAAC;MAACC,WAAW,EAAE,qBAAqB;MAAER,IAAI,EAAEF;IAAO,CAAC,CAAC;IAChFW,OAAO,CAACC,GAAG,CAAC,OAAO,GAAG,IAAI,CAACjB,gBAAgB,CAAC;EAC9C;EAAC,QAAAkB,CAAA,G;qBA1BUrB,kBAAkB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlB1B,kBAAkB;IAAA2B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX/BX,EAAA,CAAAa,cAAA,aAAmD;QAI7Cb,EAAA,CAAAc,MAAA,wBAAgB;QAAAd,EAAA,CAAAa,cAAA,cAA0B;QAAAb,EAAA,CAAAc,MAAA,GAAoB;QAAAd,EAAA,CAAAe,YAAA,EAAO;;;QAA3Bf,EAAA,CAAAgB,SAAA,GAAoB;QAApBhB,EAAA,CAAAiB,kBAAA,MAAAL,GAAA,CAAA9B,aAAA,KAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}