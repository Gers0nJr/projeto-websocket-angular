{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class WebSocketService {\n  // Open connection with the back-end socket\n  /* public connect() {\n       let socket = new SockJS(`http://localhost:8080/socket`);\n         let stompClient = Stomp.over(socket);\n         return stompClient;\n   }*/\n  connect() {\n    const WebSocket = require('ws');\n    const ws = new WebSocket('wss://localhost:8080/socket');\n  }\n  static #_ = this.ɵfac = function WebSocketService_Factory(t) {\n    return new (t || WebSocketService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WebSocketService,\n    factory: WebSocketService.ɵfac\n  });\n}","map":{"version":3,"names":["WebSocketService","connect","WebSocket","require","ws","_","_2","factory","ɵfac"],"sources":["C:\\Users\\GersonJr\\Desktop\\projetos\\angular\\projeto-websocket\\src\\app\\websocket.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\n\r\n//var SockJs = require(\"sockjs-client\");\r\n\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport * as SockJS from \"sockjs-client\";\r\n\r\n@Injectable()\r\nexport class WebSocketService {\r\n\r\n    // Open connection with the back-end socket\r\n   /* public connect() {\r\n        let socket = new SockJS(`http://localhost:8080/socket`);\r\n\r\n        let stompClient = Stomp.over(socket);\r\n\r\n        return stompClient;\r\n    }*/\r\n\r\n    connect() {\r\n        const WebSocket = require('ws');\r\n        const ws = new WebSocket('wss://localhost:8080/socket');\r\n    }\r\n}"],"mappings":";AAQA,OAAM,MAAOA,gBAAgB;EAEzB;EACD;;;;;EAQCC,OAAOA,CAAA;IACH,MAAMC,SAAS,GAAGC,OAAO,CAAC,IAAI,CAAC;IAC/B,MAAMC,EAAE,GAAG,IAAIF,SAAS,CAAC,6BAA6B,CAAC;EAC3D;EAAC,QAAAG,CAAA,G;qBAdQL,gBAAgB;EAAA;EAAA,QAAAM,EAAA,G;WAAhBN,gBAAgB;IAAAO,OAAA,EAAhBP,gBAAgB,CAAAQ;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}